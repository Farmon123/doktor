<!DOCTYPE html>
<html lang="tg">
<head>
    <meta charset="UTF-8">
    <title>Panda Quiz</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, sans-serif;
            background: linear-gradient(135deg, #1a2980, #26d0ce);
            color: white;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
        }
        
        .container {
            background: linear-gradient(to bottom right, #4a69bd, #6a89cc);
            border-radius: 25px;
            padding: 35px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);
            width: 95%;
            max-width: 550px;
            position: relative;
            overflow: hidden;
        }
        
        .container::before {
            content: "";
            position: absolute;
            top: -50px;
            right: -50px;
            width: 150px;
            height: 150px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="40" fill="none" stroke="rgba(255,255,255,0.15)" stroke-width="8"/></svg>');
            z-index: 0;
        }
        
        h1 {
            margin-bottom: 25px;
            font-size: 36px;
            text-shadow: 0 3px 6px rgba(0,0,0,0.3);
            position: relative;
            z-index: 1;
            background: linear-gradient(to right, #ff9a9e, #fad0c4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: 800;
        }
        
        #timer {
            font-size: 32px;
            font-weight: bold;
            margin: 20px 0;
            color: #FFD700;
            text-shadow: 0 2px 4px rgba(0,0,0,0.5);
            background: rgba(0, 20, 40, 0.3);
            padding: 10px;
            border-radius: 50px;
            display: inline-block;
            min-width: 150px;
        }
        
        #word-display {
            font-size: 38px;
            font-weight: bold;
            margin: 30px 0;
            min-height: 50px;
            letter-spacing: 1px;
            text-shadow: 0 3px 6px rgba(0,0,0,0.3);
            color: #f8f9fa;
        }
        
        #input-container {
            margin: 25px 0;
        }
        
        #answer {
            width: 85%;
            padding: 15px 20px;
            font-size: 20px;
            border: none;
            border-radius: 30px;
            text-align: center;
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 4px 10px rgba(0,0,0,0.15);
            transition: all 0.3s;
        }
        
        #answer:focus {
            outline: none;
            box-shadow: 0 4px 15px rgba(0,0,0,0.25);
            transform: scale(1.02);
        }
        
        #progress {
            margin: 20px 0;
            font-size: 20px;
            color: #e0f7fa;
        }
        
        .btn {
            background: linear-gradient(to right, #ff758c, #ff7eb3);
            color: white;
            border: none;
            padding: 16px 40px;
            font-size: 20px;
            border-radius: 35px;
            cursor: pointer;
            margin: 15px 10px;
            transition: all 0.3s;
            font-weight: bold;
            box-shadow: 0 5px 15px rgba(255, 117, 140, 0.4);
            min-width: 220px;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 7px 18px rgba(255, 117, 140, 0.6);
        }
        
        .btn:active {
            transform: translateY(1px);
        }
        
        #results {
            font-size: 22px;
            line-height: 1.6;
            display: none;background: rgba(255, 255, 255, 0.1);
            padding: 25px;
            border-radius: 20px;
            margin-top: 25px;
            position: relative;
            z-index: 1;
        }
        
        .error-item {
            background: rgba(255, 235, 238, 0.15);
            margin: 15px 0;
            padding: 15px;
            border-radius: 15px;
            text-align: left;
        }
        
        .error-tajik {
            font-weight: bold;
            font-size: 24px;
            margin-bottom: 8px;
            color: #ffccd5;
        }
        
        .error-english {
            color: #c8e6c9;
            font-size: 20px;
        }
        
        .error-user {
            color: #ffcc80;
            font-size: 20px;
            margin-top: 5px;
        }
        
        .results-buttons {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 25px;
        }
        
        .panda-icon {
            font-size: 40px;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="panda-icon">üêº</div>
        <h1>Panda Quiz</h1>
        <div id="timer">09:00</div>
        <div id="word-display"></div>
        <div id="input-container">
            <input type="text" id="answer" placeholder="–ù–∞–≤–∏—à–µ–¥ –±–∞ –∞–Ω–≥–ª–∏—Å”£..." autocomplete="off">
        </div>
        <div id="progress">–ö–∞–ª–∏–º–∞: 0/50</div>
        <button id="continue-btn" class="btn">–ò–¥–æ–º–∞ –¥–æ–¥–∞–Ω</button>
        <div id="results"></div>
    </div>

    <script>
        // –ú–∞—Å—Å–∏–≤ –∏–∑ 50 —Å–ª–æ–≤ —Ç–∞–¥–∂–∏–∫-–∞–Ω–≥–ª–∏–π
        const vocabulary = [
            {tajik: "—Ç–∞—ä—Å–∏—Ä–±–∞—Ö—à", english: "effective"},
            {tajik: "—ç–Ω–µ—Ä–≥–∏—è–∏ “≥–∞—Å—Å–æ—Å–Ω–æ–∫", english: "emotional energy"},
            {tajik: "“≥–∞–π—Ä–∞—Ç–∞–Ω–≥–µ–∑", english: "fabulous"},
            {tajik: "—Ö–æ–Ω–∞–∏ –æ–∏–ª–∞–≤”£", english: "family home"},
            {tajik: "“≥–∞–≤–æ—Ç–æ–∑–∞–∫—É–Ω–∞–∫", english: "fan"},
            {tajik: "—Å–∞—Ä–Ω–∞–≤–∏—à—Ç—Å–æ–∑", english: "fateful"},
            {tajik: "—Ç–∞—Ä—Å–∏–¥–∞–Ω", english: "fear"},
            {tajik: "–¥–∞—Ä “≥–æ–ª–∞—Ç–∏ —Ö—É–± –±—É–¥–∞–Ω", english: "feel up to"},
            {tajik: "—Ö—É–¥—Ä–æ —Ç–∞—ä–º–∏–Ω –∫–∞—Ä–¥–∞–Ω", english: "fend for oneself"},
            {tajik: "—Ä–∞—Å–º”£", english: "formal"},
            {tajik: "–¥—É “≥–∞—Ñ—Ç–∞", english: "fortnight"},
            {tajik: "—Ñ–æ–ª–±–∏–Ω", english: "fortune teller"},
            {tajik: "–±–æ–∑–∏–∏ –Ω–æ—Ö–∞“õ", english: "foul play"},
            {tajik: "–∫–∞—Å–µ—Ä–æ —Ñ–∏—Ä–µ–± –¥–æ–¥–∞–Ω", english: "get the better of"},
            {tajik: "–∫–∞–ø–∏–¥–∞–Ω", english: "grab"},
            {tajik: "“≥–∞–¥—è –∫–∞—Ä–¥–∞–Ω", english: "grant"},
            {tajik: "—Ñ–∏—à—É—Ä–¥–∞–Ω", english: "grasp"},
            {tajik: "–¥–∞—Ä–º–æ–Ω–¥–∞–Ω", english: "hang on"},
            {tajik: "–±–æ –¥–∏–ª–∏ —à–∏–∫–∞—Å—Ç–∞", english: "heartbroken"},
            {tajik: "“≥—É“∑—É–º –∫–∞—Ä–¥–∞–Ω", english: "hit on"},
            {tajik: "—Ö–æ–Ω–∞–∑–æ–¥", english: "home-grown"},
            {tajik: "–±–∞ –≤–∞—Ç–∞–Ω –±–∞—Ä–≥–∞—à—Ç–∞–Ω", english: "homecoming"},
            {tajik: "–±–µ—Ö–æ–Ω–∞–≤—É –¥–∞—Ä", english: "homeless"},
            {tajik: "—Å–∞“≥–∏—Ñ–∞–∏ —Ö–æ–Ω–∞–≥”£", english: "homepage"},
            {tajik: "–∑–æ–¥–≥–æ“≥", english: "hometown"},
            {tajik: "—Å–∞–≤–æ—Ä —à—É–¥–∞–Ω (–±–∞ –º–æ—à–∏–Ω)", english: "hop in"},
            {tajik: "—Å–∞—Ä“≥–∞–¥", english: "bound"},
            {tajik: "–≥–∞—Ä–∞–º", english: "warming"},
            {tajik: "—Ä–∞—Å—Ç–∞–Ω–∏“≥–æ–∏ —Ö–æ–Ω–∞–≥”£", english: "house plant"},
            {tajik: "“ì–∞–π—Ä–∏—Ä–∞—Å–º”£", english: "informal"},
            {tajik: "–±–∞ —Ñ–∏–∫—Ä–∞–º", english: "kind of"},
            {tajik: "—Å—É“ì—É—Ä—Ç–∞–∏ –∑–∏–Ω–¥–∞–≥”£", english: "life insurance"},
            {tajik: "–±—É–∑—É—Ä–≥–∏–∏ —Ç–∞–±–∏”£", english: "life-size"},
            {tajik: "–∞–±–∞–¥”£", english: "lifelong"},
            {tajik: "—è–∫—Ö–µ–ª–∞", english: "like"},
            {tajik: "—Ö–æ–ª”£ –∫–∞—Ä–¥–∞–Ω (–±–æ—Ä)", english: "load off"},
            {tajik: "–±–∞—Ö—Ç–∞—Ç–æ–Ω –æ–º–∞–¥", english: "lucky you"},
            {tajik: "–ø—É–ª –∫–æ—Ä –∫–∞—Ä–¥–∞–Ω –¥–∞—Ä –∑–∏–Ω–¥–∞–≥”£", english: "make a living"},
            {tajik: "–Ω–æ–º–¥–æ—Ä", english: "mega"},
            {tajik: "–º–∏–ª—è", english: "mile"},
            {tajik: "–∫–∞—Ñ–∫", english: "mousse"},
            {tajik: "—Ö–æ–±–∏ –∫”Ø—Ç–æ“≥", english: "nap"},{tajik: "—à–∞–±–∞–∫–∞", english: "network"},
            {tajik: "–º–∞—à“≥—É—Ä (–±–æ –º–∞—ä–Ω–æ–∏ –º–∞–Ω—Ñ”£)", english: "notorious"},
            {tajik: "–∞–≤–≤–∞–ª–∞–Ω", english: "originally"},
            {tajik: "—Ö–æ–Ω–∞–∏ —è—Ç–∏–º–æ–Ω", english: "orphanage"},
            {tajik: "–≤–∞—Ñ–æ—Ç –∫–∞—Ä–¥–∞–Ω", english: "pass away"},
            {tajik: "–º–µ“≥—Ä—É–±–æ–Ω", english: "pretty"},
            {tajik: "—Ä–∞–¥–∏—É—Å", english: "radius"},
            {tajik: "—Ä–æ“≥–∏ –æ“≥–∞–Ω", english: "railway track"},
            {tajik: "“õ–∞—Ç—Ä–∞–∏ –±–æ—Ä–æ–Ω", english: "raindrop"},
            {tajik: "—à–∏–Ω–æ—Ö—Ç–∞–Ω", english: "recognize"},
            {tajik: "–±–æ“õ–∏–º–æ–Ω–¥–∞", english: "rest of"},
            {tajik: "–Ω–æ“≥–∞–º–≤–æ—Ä", english: "rough"},
            {tajik: "—Ö–∏–∑–º–∞—Ç –∫–∞—Ä–¥–∞–Ω", english: "serve"}
        ];

        // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
        const wordDisplay = document.getElementById('word-display');
        const answerInput = document.getElementById('answer');
        const timerDisplay = document.getElementById('timer');
        const progressDisplay = document.getElementById('progress');
        const continueBtn = document.getElementById('continue-btn');
        const resultsDiv = document.getElementById('results');

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        let currentWordIndex = 0;
        let score = 0;
        let timeLeft = 540; // 9 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        let timer;
        let mistakes = [];

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        function init() {
            showWord();
            startTimer();
            
            continueBtn.addEventListener('click', nextWord);
            answerInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') nextWord();
            });
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ
        function showWord() {
            wordDisplay.textContent = vocabulary[currentWordIndex].tajik;
            answerInput.value = '';
            answerInput.focus();
            progressDisplay.textContent = `–ö–∞–ª–∏–º–∞: ${currentWordIndex+1}/50`;
        }

        // –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ
        function nextWord() {
            const userAnswer = answerInput.value.trim().toLowerCase();
            const correctAnswer = vocabulary[currentWordIndex].english.toLowerCase();
            
            if (userAnswer !== correctAnswer) {
                mistakes.push({
                    tajik: vocabulary[currentWordIndex].tajik,
                    english: vocabulary[currentWordIndex].english,
                    userAnswer: userAnswer
                });
            } else {
                score++;
            }
            
            currentWordIndex++;
            
            if (currentWordIndex < vocabulary.length && timeLeft > 0) {
                showWord();
            } else {
                finishGame();
            }
        }

        // –¢–∞–π–º–µ—Ä
        function startTimer() {
            timer = setInterval(() => {
                timeLeft--;
                
                const minutes = Math.floor(timeLeft / 60).toString().padStart(2, '0');
                const seconds = (timeLeft % 60).toString().padStart(2, '0');
                timerDisplay.textContent = `${minutes}:${seconds}`;
                
                if (timeLeft <= 0) {
                    finishGame();
                }
            }, 1000);
        }

        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
        function finishGame() {
            clearInterval(timer);
            
            const percentage = Math.round((score / vocabulary.length) * 100);
            let message;
            
            if (percentage >= 90) message = "–ê—ä–ª–æ! –®—É–º–æ –º–æ“≥–∏—Ä–∏ –∑–∞–±–æ–Ω–∏ –∞–Ω–≥–ª–∏—Å”£ “≥–∞—Å—Ç–µ–¥! üëè";
            else if (percentage >= 70) message = "–•—É–±! –ù–∞—Ç–∏“∑–∞–∏ —Ö—É–±! üëç";
            else message = "–¢–∞–ª–æ—à –∫—É–Ω–µ–¥, –±–æ–∑ “≥–∞–º –º–µ—Ç–∞–≤–æ–Ω–µ–¥ –±–µ“≥—Ç–∞—Ä! üí™";
            
            resultsDiv.innerHTML = `
                <h2>–ù–∞—Ç–∏“∑–∞“≥–æ:</h2>
                <p>–®—É–º–æ ${score} –∞–∑ ${vocabulary.length}-—Ä–æ –¥—É—Ä—É—Å—Ç “∑–∞–≤–æ–± –¥–æ–¥–µ–¥</p>
                <p>${percentage}% –¥—É—Ä—É—Å—Ç</p>
                <p><strong>${message}</strong></p>
                <button id="restart-btn" class="btn">–ê–∑ –Ω–∞–≤ —Å–∞—Ä –∫–∞—Ä–¥–∞–Ω</button>
                    <button id="show-errors-btn" class="btn">–•–∞—Ç–æ“≥–æ—Ä–æ –Ω–∏–≥–∞—Ä–µ–¥</button>
                </div>
                <div id="errors-container" style="display:none; margin-top:30px;"></div>
            `;
            
            resultsDiv.style.display = 'block';
            wordDisplay.style.display = 'none';
            answerInput.style.display = 'none';
            continueBtn.style.display = 'none';
            progressDisplay.style.display = 'none';
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            document.getElementById('restart-btn').addEventListener('click', restartGame);
            document.getElementById('show-errors-btn').addEventListener('click', showErrors);
        }

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
        function restartGame() {
            currentWordIndex = 0;
            score = 0;
            mistakes = [];
            timeLeft = 540;
            
            resultsDiv.style.display = 'none';
            wordDisplay.style.display = 'block';
            answerInput.style.display = 'block';
            continueBtn.style.display = 'inline-block';
            progressDisplay.style.display = 'block';
            
            timerDisplay.textContent = '09:00';
            showWord();
            startTimer();
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫–∏
        function showErrors() {
            const errorsContainer = document.getElementById('errors-container');
            
            if (errorsContainer.style.display === 'none') {
                let errorsHTML = '<h3>–•–∞—Ç–æ“≥–æ:</h3>';
                
                if (mistakes.length === 0) {
                    errorsHTML += '<p>–®—É–º–æ —è–≥–æ–Ω —Ö–∞—Ç–æ –Ω–∞–¥–æ—à—Ç–µ–¥! üëè</p>';
                } else {
                    mistakes.forEach((mistake, index) => {
                        errorsHTML += `
                            <div class="error-item">
                                <div class="error-tajik">${index + 1}. ${mistake.tajik}</div>
                                <div class="error-english">“∂–∞–≤–æ–±–∏ –¥—É—Ä—É—Å—Ç: ${mistake.english}</div>
                                <div class="error-user">“∂–∞–≤–æ–±–∏ —à—É–º–æ: ${mistake.userAnswer || '---'}</div>
                            </div>
                        `;
                    });
                }
                
                errorsContainer.innerHTML = errorsHTML;
                errorsContainer.style.display = 'block';
                document.getElementById('show-errors-btn').textContent = "–ü–∏–Ω“≥–æ–Ω –∫–∞—Ä–¥–∞–Ω–∏ —Ö–∞—Ç–æ“≥–æ";
            } else {
                errorsContainer.style.display = 'none';
                document.getElementById('show-errors-btn').textContent = "–•–∞—Ç–æ“≥–æ—Ä–æ –Ω–∏–≥–∞—Ä–µ–¥";
            }
        }

        // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.onload = init;
    </script>
</body>
</html>
                <div class="results-buttons">